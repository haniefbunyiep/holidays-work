// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  isHRAdmin    Boolean
  leaveBalance Int            @default(12)
  shift        Shift          @relation(fields: [shiftId], references: [id])
  position     Position       @relation(fields: [positionId], references: [id])
  shiftId      Int
  positionId   Int
  LeaveRequest LeaveRequest[]
  Attendance   Attendance[]
}

model Position {
  id           Int        @id @default(autoincrement())
  positionName String
  salary       Int
  Employee     Employee[]
}

model Shift {
  id       Int        @id @default(autoincrement())
  start    DateTime   @db.Time()
  end      DateTime   @db.Time()
  Employee Employee[]
}

model LeaveRequest {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  status     Boolean  @default(false)
  startDate  DateTime @db.Date()
  endDate    DateTime @db.Date()
}

model Attendance {
  id         Int       @id @default(autoincrement())
  employee   Employee  @relation(fields: [employeeId], references: [id])
  employeeId Int
  date       DateTime  @db.Date
  clockIn    DateTime  @db.Time()
  clockOut   DateTime? @db.Time()
  isOnLeave  Boolean?  @default(false)
  deduction  Int?

  @@unique([employeeId, date])
}
